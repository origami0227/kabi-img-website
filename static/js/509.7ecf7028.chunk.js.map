{"version":3,"file":"static/js/509.7ecf7028.chunk.js","mappings":"4PAOMA,EAAMC,EAAAA,GAAAA,IAAU,6GAmEtB,GA7DiBC,EAAAA,EAAAA,KAAS,WACtB,IAAOC,GAAgBC,EAAAA,EAAAA,KAAhBD,aAsBP,OAjBAE,EAAAA,EAAAA,YAAU,WAEN,OADAC,QAAQC,IAAI,4BACL,WACHD,QAAQC,IAAI,gBACZJ,EAAaK,OACjB,CACJ,GAAE,KAYE,+BACI,SAAC,IAAc,CACXC,aAAa,EACbC,UAAW,EACXC,SA1BK,WAEbR,EAAaS,MACjB,EAwBYC,SAAUV,EAAaW,WAAaX,EAAaU,QACjDE,WAAW,EAAK,UAEhB,SAAC,KAAI,CAACC,WAAYb,EAAac,KACzBC,WACI,SAAAC,GAAI,OAEA,UAAC,UAAS,YACN,0BACI,SAACnB,EAAG,CAACoB,IAAKD,EAAKE,WAAWC,IAAID,WAAWC,SAE7C,0BACI,wBAAKH,EAAKE,WAAWE,cAEzB,0BACI,cAAGC,KAAML,EAAKE,WAAWC,IAAID,WAAWC,IAAI,SAAEH,EAAKE,WAAWC,IAAID,WAAWC,SAEjF,mBAAQG,QAAS,kBAAItB,EAAauB,OAAOP,EAAK,EAAC,wCAVnCA,EAAKQ,GAWT,EACnB,SAEFxB,EAAaW,WAAaX,EAAaU,UACpC,0BACI,SAAC,IAAI,CAACe,IAAI,8BAOtC,IC5DA,MATA,WACI,OACI,iCACI,sDACA,SAAC,EAAQ,MAGrB,C","sources":["components/List.js","pages/History.js"],"sourcesContent":["import React, {useEffect} from 'react'\nimport {observer} from 'mobx-react'\nimport {useStores} from \"../stores\";\nimport InfiniteScroll from 'react-infinite-scroller';\nimport {List, Spin} from 'antd';\nimport styled from 'styled-components'\n\nconst Img = styled.img`\n  width: 100px;\n  height: 120px;\n  object-fit: contain;\n  border:1px solid #ccc;\n`\nconst DataList = observer(() => {\n    const {HistoryStore} = useStores()\n    const loadMore = () => {\n        //自动查询数据并放入列表\n        HistoryStore.find()\n    }\n    useEffect(()=>{\n        console.log('进入组件')\n        return ()=>{\n            console.log('卸载')\n            HistoryStore.reset() //重置\n        }\n    },[])\n\n    //InfiniteScroll的属性写成一个对象\n    // const options = {\n    //     initialLoad: true,\n    //     pageStart: 0,\n    //     loadMore,\n    //     hasMore: !HistoryStore.isLoading && HistoryStore.hasMore,//加载完毕且有hasMore\n    //     useWindow: true,\n    //     dataLength: HistoryStore.limit\n    // }\n    return (\n        <>\n            <InfiniteScroll\n                initialLoad={true}\n                pageStart={0}\n                loadMore={loadMore}\n                hasMore={!HistoryStore.isLoading && HistoryStore.hasMore}\n                useWindow={true}\n            >\n                <List dataSource={HistoryStore.list}\n                      renderItem={\n                          item =>\n                              //使用key是diff时可以提高效率\n                              <List.Item key={item.id}>\n                                  <div>\n                                      <Img src={item.attributes.url.attributes.url} />\n                                  </div>\n                                  <div>\n                                      <h5>{item.attributes.filename}</h5>\n                                  </div>\n                                  <div>\n                                      <a href={item.attributes.url.attributes.url}>{item.attributes.url.attributes.url}</a>\n                                  </div>\n                                  <button onClick={()=>HistoryStore.delete(item)}>删除记录</button>\n                              </List.Item>\n                      }\n                >\n                    {HistoryStore.isLoading && HistoryStore.hasMore && (\n                        <div>\n                            <Spin tip=\"加载中\"/>\n                        </div>\n                    )}\n                </List>\n            </InfiniteScroll>\n        </>\n    )\n})\n\nexport default DataList","import React from \"react\";\nimport DataList from \"../components/List\";\n\nfunction History() {\n    return (\n        <>\n            <h1>上传历史</h1>\n            <DataList></DataList>\n        </>\n    )\n}\n\nexport default History"],"names":["Img","styled","observer","HistoryStore","useStores","useEffect","console","log","reset","initialLoad","pageStart","loadMore","find","hasMore","isLoading","useWindow","dataSource","list","renderItem","item","src","attributes","url","filename","href","onClick","delete","id","tip"],"sourceRoot":""}